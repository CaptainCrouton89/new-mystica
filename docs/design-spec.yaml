# Design Specification
# UI/UX design details, components, and interaction patterns.

status: in-progress
last_updated: 2025-10-21

overview:
  design_goals: "Create a cyberpunk-inspired dark RPG experience with neon accents, clean typography, and smooth animations. Dark gray backgrounds with neon pink/blue accents provide high contrast and modern aesthetic. Prioritize readability and visual impact."

  visual_summary: |
    AESTHETIC: Dark minimalist cyberpunk
    - Base: Deep black/dark gray (#1A1A1A, #2F2F2F)
    - Accents: Neon pink (#FF1493) primary, neon blue (#00BFFF) secondary
    - Typography: Bungee-Regular (bold display font) for ALL text
    - Mood: Sleek, modern, high-tech with vibrant neon pops
    - Inspiration: Cyberpunk 2077 UI, neon-lit dark interfaces, retro-futuristic

  design_links:
    - "Implemented in SwiftUI: Colors.swift (color tokens), FontManager.swift (typography)"
    - "Component library: ButtonComponents.swift, TextComponents.swift, PopupComponents.swift"
    - "Assets: mystica_logo.png, SF Symbols for icons"

  design_system: "Custom SwiftUI design system with semantic color tokens, centralized font management (Bungee primary font with system font fallback), reusable components (TextButton, IconButton, BackButton, TitleText, NormalText, SmallText). All interactive elements use consistent animation timing (150ms micro-interactions, 300ms transitions)."

color_palette:
  primary:
    - name: "Dark Gray"
      hex: "#1A1A1A"
      usage: "Primary background, main containers"
    - name: "Charcoal Gray"
      hex: "#2F2F2F"
      usage: "Secondary backgrounds, cards, depth layers"

  secondary:
    - name: "Neon Pink"
      hex: "#FF1493"
      usage: "Primary accent, CTAs, active states, highlights"
    - name: "Neon Blue"
      hex: "#00BFFF"
      usage: "Secondary accent, interactive elements, success states"

  neutral:
    - name: "Light Gray"
      hex: "#E5E5E5"
      usage: "Primary text, borders on dark backgrounds"
    - name: "White"
      hex: "#FFFFFF"
      usage: "High contrast text, icons"

  interactive:
    - name: "Bright Pink"
      hex: "#FF69B4"
      usage: "Hover states, pressed buttons, interactive feedback"
    - name: "Bright Blue"
      hex: "#1E90FF"
      usage: "Hover states, secondary interactive elements"

  semantic:
    - name: "Secondary Text"
      hex: "#B0B0B0"
      usage: "Secondary text, captions, disabled states"
    - name: "Error Pink"
      hex: "#FF1493"
      usage: "Error states, warnings, negative feedback"

typography:
  primary:
    family: "Bungee-Regular"
    fallback: "System Bold (if Bungee unavailable)"
    sizes: "30pt (title), 22pt (subtitle), 17pt (body), 13pt (caption), 11pt (small)"
    usage: "ALL text in app - titles, buttons, labels, body text. Applied via FontManager.title, .subtitle, .body, .caption, .small"
    notes: "FontManager.swift handles font loading with automatic fallback. testWithSystemFont flag available for debugging."

  system_fallback:
    family: "System Font"
    weight: "Bold/Medium"
    sizes: "Same as primary"
    usage: "Automatic fallback if Bungee font fails to load"
    notes: "SF Symbols used for icons (20pt medium weight in IconButton, 16pt medium in BackButton)"

layouts_components:
  - screen: "Launch / Login Screen"
    description: "First screen with app branding, login form, and registration option"
    components:
      - "App logo/title (centered, large)"
      - "Email input field"
      - "Password input field (secure)"
      - "Login button (primary CTA)"
      - "Sign Up link (text button)"
      - "Forgot Password link (text button)"
    notes: "Dark gray background (#1A1A1A). Neon pink primary buttons. White text on dark. (Login not yet implemented - placeholder spec)"

  - screen: "Main Menu"
    description: "Entry screen with mystica logo and navigation to Map/Collection"
    components:
      - "Mystica logo (centered top, max 400x200pt)"
      - "Map button (gradient neon pink → bright pink, map.fill icon)"
      - "Collection button (gradient neon blue → neon pink, square.grid.3x3.fill icon)"
      - "Dark gray background (#1A1A1A)"
    implementation: "MainMenuView.swift, uses MenuOptionView component with gradient circle icons, chevron.right indicators"
    notes: "Menu options have 60pt gradient circle icons, 24pt spacing between buttons, 24pt padding in cards, 16pt corner radius"

  - screen: "Map View"
    description: "Google Maps integration showing player location and nearby spawn points"
    components:
      - "Google Maps view (full screen)"
      - "Player location marker (blue dot, pulsing)"
      - "Spawn location markers (colored pins by type)"
      - "Active location marker (glowing, tappable)"
      - "Bottom sheet: selected location info"
      - "Profile button (top-left IconButton)"
      - "Inventory button (top-right IconButton)"
      - "Location distance indicator (overlay on map)"
    implementation: "MapView.swift (placeholder - Google Maps SDK integration pending)"
    notes: "Map centered on player. Markers color-coded by item type. Bottom sheet shows enemy type, distance, neon pink 'Start Combat' button."

  - screen: "Combat Screen (BattleView)"
    description: "Turn-based combat interface with attack dial and HP bars"
    components:
      - "Enemy section (top): SF Symbol icon (e.g., pawprint.fill), name, HP bar"
      - "VS Indicator (center): neon pink divider with 'VS' text"
      - "Player section (middle): 'You' label, HP bar"
      - "Combat dial (bottom): spinning dial with tap to attack, multiplier zones"
      - "Back button (BaseView navigation - top-left BackButton)"
      - "Combat message overlay (temporary)"
    implementation: "BattleView.swift with BaseView wrapper. Uses NavigableView protocol. Dial rotation animation with Timer."
    notes: "Dark background (#1A1A1A). HP bars use RoundedRectangle with gradient fills. Scale animations on damage (enemyScale/playerScale state). Combat messages show temporarily. Navigation to VictoryView/DefeatView on combat end."

  - screen: "Inventory Screen"
    description: "Grid view of collected items and pets with filtering"
    components:
      - "Tabs: Items / Pets"
      - "Filter buttons: All / Equipped / By Type"
      - "Sort dropdown: Type / Generation / Stats"
      - "Item grid (2 columns on iPhone, 3 on iPad)"
      - "Item card: image, name, stats, style badge, equipped badge"
      - "Tap card → Detail view"
    notes: "Styled items have unique visual treatment by style type (borders, effects, animations). Equipped items show green checkmark badge. Long-press for quick actions (equip/craft)."

  - screen: "Item Detail View"
    description: "Full-screen overlay showing item details and actions"
    components:
      - "Item image (large, centered)"
      - "Item name and type"
      - "Material slots indicator (0-3 applied)"
      - "Style badge (if applicable)"
      - "Stats breakdown: ATK / DEF / HP (color-coded)"
      - "Description text (AI-generated)"
      - "Equip button (or Unequip if equipped)"
      - "Apply Materials button (if materials available)"
      - "Close button (X, top-right)"
    notes: "Modal presentation with blur background. Stats displayed as horizontal bars with numeric labels. Equip button disabled if slot occupied (show 'Unequip first' message)."

  - screen: "Equipment Screen"
    description: "Visual loadout showing all equipped items and active pet"
    components:
      - "Character silhouette (center)"
      - "Equipment slots (overlay on silhouette): head, armor, weapon, offhand, feet, accessory_1, accessory_2"
      - "Active pet (bottom-left of character)"
      - "Total stats display (bottom): ATK / DEF / HP"
      - "Tap slot → Open item selector"
    notes: "Visual representation of equipped items on character model. Empty slots show placeholder icon. Stats update in real-time when changing equipment."

  - screen: "Materials Application Screen"
    description: "Apply materials to items interface with material selection"
    components:
      - "Base item selector (center)"
      - "Material slots (1-3, drag and drop)"
      - "Available materials list (bottom)"
      - "Preview card: enhanced stats, craft count indicator"
      - "Gold cost display (F-06 leveling system)"
      - "Apply Materials button (primary CTA)"
      - "Reset materials button (secondary)"
    notes: "Up to 3 materials can be applied to any item. Preview shows stat bonuses from materials. Gold cost increases with item level (F-06). Instant application, no timers."

  - screen: "Victory Screen"
    description: "Combat completion with reward display"
    components:
      - "Victory banner/animation"
      - "Reward card: item/pet image, stats, style badge"
      - "Collection message: 'New [Type] collected!'"
      - "Continue button → Returns to map"
    notes: "Celebratory animation with confetti effect. Styled rewards have enhanced animations matching their visual style (pixel sparkles, watercolor swirls, neon glows). Haptic feedback on victory."

  - screen: "Profile Screen"
    description: "Player stats, achievements, and settings"
    components:
      - "Player name/level (top)"
      - "Total stats: ATK / DEF / HP (from equipment)"
      - "Collection progress: items collected, shinies, combat wins"
      - "Settings button"
      - "Logout button"
    notes: "Simple stat dashboard. Future: Add leaderboards, achievements."

accessibility:
  color_contrast: "WCAG AA compliant for all text (4.5:1 minimum). Combat damage numbers use high contrast (white text on dark background with border). Colorblind-friendly: Use icons + labels in addition to color-coding."
  keyboard_navigation: "Not applicable (mobile touch-first). VoiceOver labels on all interactive elements."
  screen_reader: "VoiceOver support: All buttons labeled, stats announced as 'Attack 50, Defense 30, Health 100'. Combat dial provides audio cue on tap. Item cards announce type, generation, style variant (Normal, Pixel Art, Watercolor, Neon, Sketch)."

responsive_behavior: |
  - iPhone (compact): Single column layouts, bottom sheets for details
  - iPad (regular): Two-column inventory, side-by-side combat UI (player left, enemy right)
  - macOS: Same as iPad layout, keyboard shortcuts (Cmd+I for inventory, Cmd+M for map, Space for attack)
  - Orientation: Portrait optimized, landscape supported (map view stretches horizontally)

interaction_specs:
  - component: "Primary Button (TextButton)"
    states:
      - "default: Neon Pink (#FF1493) background, white text, 12pt corner radius, height 48pt"
      - "pressed: Bright Pink (#FF69B4) background, scale 0.98, haptic feedback"
      - "disabled: secondary background (#2F2F2F), gray text (#B0B0B0), 30% opacity"
    animation: "scale transition 100ms ease-out, color transition 150ms"
    implementation: "TextButton component (ButtonComponents.swift:52-94). Uses FontManager.body, longPress gesture for state tracking"
    notes: "Use for main CTAs. Full-width by default. Audio feedback via AudioManager.playMenuButtonClick()"

  - component: "Icon Button"
    states:
      - "default: 44x44pt frame, gray text (#B0B0B0), dark background (#1A1A1A), neon pink border (#FF1493), 8pt corner radius"
      - "pressed: subtle gray background (#B0B0B0), bright pink border (#FF69B4), scale 0.95, haptic feedback"
      - "disabled: secondary background (#2F2F2F), subtle border (#B0B0B0), 30% opacity"
    animation: "color transition 150ms ease-out, scale 100ms"
    implementation: "IconButton component (ButtonComponents.swift:4-49). 20pt medium SF Symbol icons, longPress gesture"
    notes: "Use for Profile, Inventory, navigation actions. Audio feedback via AudioManager. Minimum 44x44pt tap target."

  - component: "Attack Dial"
    states:
      - "rotating: indicator sweeps 360° in 2 seconds (continuous loop)"
      - "tapped: indicator stops, multiplier calculated, flash effect on dial"
      - "result: damage number animates up, dial resets for enemy turn"
    animation: "rotation animation ease-in-out, flash effect 300ms"
    notes: "Dial has 3 concentric zones (center=gold=2x, mid=white=1.5x, outer=red=0.5x). Haptic feedback on tap (impact medium)."

  - component: "HP Bar"
    states:
      - "full: Emerald Green (100-70%)"
      - "medium: Gold Accent (70-30%)"
      - "low: Attack Red (30-0%)"
      - "animating: smooth decrease with easing"
    animation: "width transition 500ms ease-out, color transition 300ms"
    notes: "Display numeric HP below bar (e.g., '75 / 100'). Pulse animation when low (<30%)."

  - component: "Item Card"
    states:
      - "default: Charcoal Gray background, rounded corners (8pt)"
      - "equipped: green border (2pt), checkmark badge"
      - "styled: visual treatment by style type - Normal: default appearance, Pixel Art: pixelated border (2pt) + blocky effect, Watercolor: soft gradient border + subtle blur, Neon: glowing border (2pt) + pulsing effect, Sketch: hand-drawn border + sketchy animation"
      - "pressed: scale 0.95, haptic feedback"
    animation: "scale transition 100ms, sparkle keyframe animation"
    notes: "Show item image (top), name (below), stats (bottom, small text). Generation badge in top-right corner."

  - component: "Damage Number"
    states:
      - "appear: fade in from 0 → 1 opacity, move up 50pt"
      - "critical (>50 damage): larger scale (1.5x), Attack Red color"
      - "normal: white color, 1.0x scale"
    animation: "opacity + translate 800ms ease-out, then fade out and remove"
    notes: "Display above enemy on player turn, above player on enemy turn. Bold mono font (SF Mono)."

  - component: "Location Marker (Map)"
    states:
      - "inactive: colored pin (by type), 30pt size"
      - "active (within 50m): glowing ring animation, 40pt size, tappable"
      - "selected: highlighted, bottom sheet appears"
    animation: "glow pulse 1.5s infinite, scale transition 200ms"
    notes: "Marker colors: red (weapon), blue (armor), green (pet), purple (premium). Active markers have white glow ring."


animations_timing:
  - name: "Screen Transitions"
    duration: "300ms"
    easing: "ease-in-out"
    notes: "Push (map → combat), modal (inventory → item detail)"

  - name: "Micro-interactions"
    duration: "150ms"
    easing: "ease-out"
    notes: "Button presses, state changes, highlights"

  - name: "Combat Actions"
    duration: "500-800ms"
    easing: "ease-out"
    notes: "Damage numbers, HP bar changes, dial results"

  - name: "Celebrations"
    duration: "2s"
    easing: "spring (bounce)"
    notes: "Victory screen, style reveals (matching visual style), level-ups"

visual_style_system:
  normal:
    description: "Default appearance with clean lines and standard colors"
    border: "Standard gray border (1pt), no special effects"
    background: "Standard item card background"
    animation: "None"
    badge_color: "#B0B0B0"
    badge_text: "Normal"
    accessibility: "Standard contrast ratios, no additional visual indicators needed"

  pixel_art:
    description: "Retro pixel art aesthetic with blocky, 8-bit inspired visuals"
    border: "Pixelated border effect (2pt), blocky corners (2pt radius)"
    background: "Slightly darkened with pixel texture overlay"
    animation: "Subtle pixelated shimmer effect (2s loop)"
    badge_color: "#8B4513"
    badge_text: "Pixel"
    accessibility: "High contrast pixelated pattern, distinct from other styles"

  watercolor:
    description: "Soft, artistic appearance with blended colors and gentle effects"
    border: "Soft gradient border (2pt) with watercolor blend effect"
    background: "Subtle watercolor texture with soft edges"
    animation: "Gentle color flow animation (4s loop)"
    badge_color: "#4682B4"
    badge_text: "Watercolor"
    accessibility: "Soft blue tint with maintained contrast ratios"

  neon:
    description: "Bright, glowing cyberpunk aesthetic with electric effects"
    border: "Glowing neon border (2pt) with outer glow effect (4pt)"
    background: "Darkened background to enhance glow contrast"
    animation: "Pulsing glow effect (1.5s loop), occasional electric spark"
    badge_color: "#00FFFF"
    badge_text: "Neon"
    accessibility: "High contrast glow effect, blue-cyan color for colorblind support"

  sketch:
    description: "Hand-drawn appearance with rough lines and artistic imperfections"
    border: "Hand-drawn style border (2pt) with slight irregularities"
    background: "Subtle paper texture with slight off-white tint"
    animation: "Sketchy line animation (3s loop), simulates drawing motion"
    badge_color: "#696969"
    badge_text: "Sketch"
    accessibility: "Distinct sketchy pattern, maintained readability with consistent line weight"

style_implementation_guidelines:
  badge_design: "Small rounded rectangle (16x8pt) in top-right corner of item cards. Text uses SF Pro Text 8pt bold. Colors defined per style above."
  animation_performance: "All style animations use Core Animation for 60fps performance. Animations can be disabled in accessibility settings."
  style_distribution: "Normal: 70%, Pixel Art: 10%, Watercolor: 8%, Neon: 7%, Sketch: 5% (configurable in backend)"
  scalability: "Visual system designed to support additional styles in future updates. Each style requires: border treatment, background effect, animation, badge design."
  colorblind_support: "Each style uses distinct patterns and shapes in addition to color. Neon uses cyan (colorblind-safe), Watercolor uses blue tones, Pixel uses brown earth tones."

design_tokens:
  spacing:
    xs: "4pt"
    sm: "8pt"
    md: "16pt"
    lg: "24pt"
    xl: "32pt"
    xxl: "40pt"
    notes: "MainMenuView uses 40pt VStack spacing, 24pt button spacing, 32pt horizontal padding"

  corner_radius:
    small: "4pt"
    medium: "8pt"
    large: "12pt"
    card: "16pt"
    notes: "TextButton uses 12pt, IconButton uses 8pt, MenuOptionView cards use 16pt"

  shadows:
    text_shadow: "black 30% opacity, radius 2, offset (0,2)"
    notes: "TitleText applies shadow for depth. Card shadows not currently used (dark theme minimalism)"

component_implementations:
  TextButton:
    file: "ButtonComponents.swift:52-94"
    usage: "TextButton('Start Combat', height: 48) { action }"
    styling: "Full-width, 48pt height, 12pt corner radius, neon pink background"
    states: "default → pressed (bright pink, scale 0.98) → disabled (gray, 30% opacity)"
    audio: "AudioManager.playMenuButtonClick() on tap"

  IconButton:
    file: "ButtonComponents.swift:4-49"
    usage: "IconButton(icon: 'map.fill', size: 44) { action }"
    styling: "44x44pt default size, 8pt corner radius, neon pink border, dark background"
    states: "default → pressed (gray bg, bright pink border, scale 0.95) → disabled"
    audio: "AudioManager.playMenuButtonClick() on tap"

  BackButton:
    file: "ButtonComponents.swift:97-140"
    usage: "BackButton(size: 40) { navigationManager.navigateBack() }"
    styling: "40pt circle, chevron.left icon, neon pink border, transparent background"
    states: "default → pressed (dark bg, bright pink border, scale 0.95)"
    audio: "AudioManager.playBackButtonClick() on tap"
    notes: "Auto-included in BaseView wrapper for NavigableView screens"

  TitleText:
    file: "TextComponents.swift:4-21"
    usage: "TitleText('Battle', size: 30)"
    styling: "30pt Bungee font, white color, 0.5pt kerning, black shadow"

  NormalText:
    file: "TextComponents.swift:24-41"
    usage: "NormalText('Description here')"
    styling: "17pt Bungee font, gray (#B0B0B0) color, 0.2pt kerning, 2pt line spacing"

  SmallText:
    file: "TextComponents.swift:44-61"
    usage: "SmallText('Caption')"
    styling: "13pt Bungee font, gray color, 0.2pt kerning, 1pt line spacing"

  MenuOptionView:
    file: "MainMenuView.swift:69-118"
    usage: "MenuOptionView(title: 'Map', icon: 'map.fill', gradientColors: [.accent, .accentInteractive])"
    styling: "60pt gradient circle icon, 16pt corner radius card, 24pt padding, chevron.right indicator"
    notes: "Used in MainMenuView for navigation buttons"

  BaseView:
    file: "NavigableView.swift (implied by BattleView usage)"
    usage: "BaseView(title: 'Battle') { content }"
    styling: "Wraps NavigableView screens, provides back button, title display"
    notes: "Requires NavigationManager in environment"

icons:
  source: "SF Symbols (iOS native) - system(size:weight:) API"
  sizes: "20pt medium (IconButton), 16pt medium (BackButton chevron), 24pt semibold (MenuOptionView)"
  custom: "mystica_logo.png (MainMenuView), enemy icons use SF Symbols (e.g., pawprint.fill for Shadow Wolf)"
  implementation: "Image(systemName:) for SF Symbols, Image(named:) for custom assets"
  notes: "SF Symbols provide consistent icon set. Custom game assets stored in Assets catalog."

  stat_icons:
    source: "Remote R2 CDN with AsyncImage loading and SF Symbol fallbacks"
    base_url: "https://pub-1f07f440a8204e199f8ad01009c67cf5.r2.dev/ui/stats/"
    icons:
      attack_power:
        url: "attack-power-crossed-swords.png"
        fallback: "sword.fill"
        usage: "Item stats, equipment details, combat displays"
      attack_accuracy:
        url: "attack-accuracy-crosshair.png"
        fallback: "target"
        usage: "Item stats, equipment details, combat displays"
      defense_power:
        url: "defense-power-round-shield.png"
        fallback: "shield.fill"
        usage: "Item stats, equipment details, combat displays"
      defense_accuracy:
        url: "defense-accuracy-force-field.png"
        fallback: "checkmark.shield.fill"
        usage: "Item stats, equipment details, combat displays"
    implementation: "AsyncImage(url:) with placeholder SF Symbol fallback. Components: StatDetailRow (16x16pt), StatBadge (10x10pt)"
    notes: "Remote icons provide visual consistency across platforms. Fallbacks ensure functionality when offline."

implementation_notes: |
  CURRENT STATUS (Light MVP):
  - ✅ Color system implemented: Colors.swift with semantic naming (primary, secondary, accent, text*, background*, border*)
  - ✅ Typography system: FontManager.swift with Bungee-Regular primary font + system fallback
  - ✅ Component library: TextButton, IconButton, BackButton (ButtonComponents.swift), TitleText, NormalText, SmallText (TextComponents.swift)
  - ✅ Animation system: 150ms micro-interactions, 300ms screen transitions, longPress gesture state tracking
  - ✅ Audio integration: AudioManager with playMenuButtonClick(), playBackButtonClick() on all interactive elements
  - ✅ Navigation system: NavigationManager singleton with NavigableView protocol, BaseView wrapper with back button
  - ✅ Main screens: MainMenuView (logo + gradient buttons), BattleView (combat dial + HP bars), VictoryView, DefeatView
  - ⚠️ MapView placeholder (Google Maps SDK not integrated yet)
  - ⚠️ CollectionView placeholder (inventory grid not implemented)
  - ⚠️ Normal style only - no visual style variants yet

  NEXT STEPS (Full MVP):
  - Implement Google Maps SDK integration in MapView
  - Build CollectionView with 2-column grid, filter/sort
  - Add Item Detail modal overlay
  - Implement Equipment screen with character silhouette + slot overlay
  - Add Materials Application screen
  - Implement all 5 visual styles (Normal, Pixel Art, Watercolor, Neon, Sketch) with Core Animation
  - Add haptic feedback (currently audio only)
  - Polish combat dial with zone visualization and multiplier display
  - Add HP bar color transitions (green → yellow → red)

  DESIGN SYSTEM ARCHITECTURE:
  - Colors.swift: Semantic color tokens (avoid hardcoded hex in views)
  - FontManager.swift: Single source of truth for typography (Bungee primary, system fallback)
  - ButtonComponents.swift: TextButton, IconButton, BackButton with consistent state management
  - TextComponents.swift: TitleText, NormalText, SmallText with Bungee font + semantic colors
  - PopupComponents.swift: PopupView for modals/overlays
  - NavigationManager.swift: Global navigation state with history tracking (max 10 items)
  - AudioManager.swift: Centralized sound effects (menu clicks, back navigation)
  - All components use @EnvironmentObject for NavigationManager + AudioManager injection
