title: User Flows - Player Progression Systems
template: ~/.claude/file-templates/init-project/user-flows/user-flow-title.yaml
status: draft
last_updated: 2025-10-21

key_personas:
  - "Completionist - Maximizes all progression systems"
  - "Casual Player - Enjoys natural progression without grinding, appreciates clear milestones"

primary_flows:
  - name: "Gain XP & Level Up Flow"
    trigger: "Player completes combat encounter successfully"
    steps:
      - "Player defeats enemy in combat encounter"
      - "System awards 50 base XP from combat only"
      - "Backend calculates new total XP and level from progression formula"
      - "If level threshold crossed, level-up notification displays"
      - "Player progression continues without level-gated unlocks"
      - "Available level rewards appear in progression status if claimable"
      - "XP progress bar updates showing progress toward next level"
    outcome: "Player sees clear progression feedback and understands advancement toward next milestone"
    edge_cases:
      - "Multiple level gains in single XP award (rare but possible at low levels)"
      - "Level 50+ soft cap applies exponential multiplier (1.5x per level beyond 50)"
      - "Max level 100 reached (theoretical cap, near-impossible to achieve)"

  - name: "Vanity Level Display Flow"
    trigger: "Player views profile or equipment screen"
    steps:
      - "System calculates sum of all 8 equipped item levels divided by 6"
      - "Vanity level displays prominently in player profile"
      - "Visual progression indicator shows vanity level growth over time"
    outcome: "Player understands total equipment power progression"
    edge_cases:
      - "Empty equipment slots count as level 0 in calculation"
      - "Cached vanity level may temporarily desync during rapid equipment changes"
      - "Database triggers maintain vanity level cache accuracy"
      - "Vanity level can decrease if player equips lower-level items"



  - name: "View Progression Stats Flow"
    trigger: "Player accesses progression/profile screen"
    steps:
      - "System loads PlayerProgression data and calculates current status"
      - "Display current level, XP, and progress bar to next level"
      - "Display vanity level with equipped item level breakdown"
      - "List available level rewards ready for claiming"
      - "Show endgame goals (combat mastery, collection completion, etc.)"
      - "Display progression statistics (time played, combat victories, etc.)"
    outcome: "Player has comprehensive view of all progression systems and goals"
    edge_cases:
      - "New players see simplified view with focus on early progression"
      - "High level players see endgame content focus"
      - "Cached data refresh handles concurrent progression updates"

secondary_flows:
  - name: "Claim Level Reward Flow"
    trigger: "Player has unclaimed level reward available"
    steps:
      - "Player views progression screen with available rewards highlighted"
      - "Player selects specific level reward to claim"
      - "System validates reward eligibility and claim status"
      - "Gold reward added to balance via EconomyTransaction"
      - "Reward marked as claimed in UserLevelRewards table"
      - "Success notification shows gold amount and new balance"
    outcome: "Player receives tangible reward for reaching level milestone"
    edge_cases:
      - "Reward already claimed error (409) if double-clicked"
      - "Insufficient level error if somehow triggered prematurely"
      - "Transaction fails due to database issues - retry mechanism"

  - name: "XP Source Breakdown Flow"
    trigger: "Player views detailed progression analytics"
    steps:
      - "System aggregates XP sources from analytics events"
      - "Display breakdown: combat victories (100% - only XP source)"
      - "Show XP earning rate over time with trend analysis"
      - "Compare against average player progression rates"
      - "Suggest optimization for faster progression if desired"
    outcome: "Player understands their XP earning patterns and optimization opportunities"
    edge_cases:
      - "New players have limited data for meaningful breakdown"
      - "Analytics data may have lag in real-time display"



  - name: "Progression Sync Recovery Flow"
    trigger: "Player progression data becomes inconsistent or out of sync"
    steps:
      - "System detects mismatch between XP, level, and cached calculations"
      - "Background process recalculates progression from transaction history"
      - "Corrected values update PlayerProgression table"
      - "Player notification if significant changes occurred"
      - "Analytics event logged for debugging purposes"
    outcome: "Player progression data remains accurate and trustworthy"
    edge_cases:
      - "Recovery may temporarily show incorrect values during recalculation"
      - "Severe data corruption may require manual intervention"
      - "Race conditions during concurrent progression updates"