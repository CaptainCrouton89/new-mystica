title: Technical Specification - Items System
template: ~/.claude/file-templates/init-project/feature-spec/feature-title.yaml
feature_id: F-03
status: planned
last_updated: 2025-10-19

summary: "Equippable items with location-specific spawns, stat modifiers (ATK/DEF/HP), rarity variants (standard/shiny), and generation tiers (1-3). Items collected from combat and crafted via fusion."

functional_overview:
  core_logic: "Items spawn at specific locations based on city or global rules. Each item has type (helmet, armor, weapon, etc.), stats, generation, and shiny status. Players collect items from defeated enemies. Items can be equipped to slots, providing stat bonuses. Items can be crafted into higher generations."
  data_schema: "Items table with owner_id (player FK), stats, type, generation, shiny flag, location association"
  api_endpoints:
    - "GET /inventory"
    - "POST /equipment/equip"
    - "POST /equipment/unequip"
  integration_points:
    - "Combat system (F-02) for rewards"
    - "Crafting system (F-06) for fusion"
    - "AI generation (F-05) for unique items"

detailed_design:
  data_structures:
    - name: "items"
      columns:
        - "id: UUID (PK)"
        - "owner_id: UUID (FK to users, null if template)"
        - "type: VARCHAR (helmet, armor, amulet, ring, sword, axe, shield)"
        - "description: TEXT (AI-generated)"
        - "atk: INT"
        - "def: INT"
        - "hp: INT"
        - "generation: INT (1-3)"
        - "is_shiny: BOOLEAN"
        - "is_equipped: BOOLEAN"
        - "equipped_slot: VARCHAR (null if not equipped)"
        - "location_id: UUID (FK to locations, null if global/crafted)"
        - "parent_item_1: UUID (FK to items, for crafted items)"
        - "parent_item_2: UUID (FK to items, for crafted items)"
        - "created_at: TIMESTAMP"

    - name: "item_templates (for location-based generation)"
      columns:
        - "id: UUID (PK)"
        - "type: VARCHAR"
        - "description: TEXT"
        - "stat_distribution: JSON {atk: 0.4, def: 0.3, hp: 0.3}"
        - "level: INT (scales absolute stats)"
        - "location_id: UUID (FK)"
        - "is_premium: BOOLEAN"

  apis:
    - method: "GET"
      endpoint: "/inventory"
      request: "Header: Authorization Bearer token"
      response: "{items: [{id, type, description, atk, def, hp, generation, is_shiny, is_equipped}]}"
      errors:
        - "401: Unauthorized"

    - method: "POST"
      endpoint: "/equipment/equip"
      request: "{item_id: UUID, slot: VARCHAR}"
      response: "{success: true, total_stats: {atk, def, hp}}"
      errors:
        - "404: Item not found or not owned"
        - "400: Invalid slot for item type"
        - "409: Slot already occupied (unequip first)"

    - method: "POST"
      endpoint: "/equipment/unequip"
      request: "{slot: VARCHAR}"
      response: "{success: true, total_stats: {atk, def, hp}}"
      errors:
        - "400: Invalid slot"

  diagrams: |
    Item Lifecycle:
    1. Item template created by AI (F-05) for location
    2. Player defeats enemy at location → Copy template to player inventory
    3. Player can equip item → Set is_equipped=true, equipped_slot=<slot>
    4. Item stats added to player total stats
    5. Player can craft 2 items → Create new item with parent references
    6. Crafted item added to inventory

    Equipment Slots:
    - helmet (1)
    - armor (1)
    - amulet (1)
    - ring (2) - can equip 2 rings
    - weapon (1) - sword or axe
    - shield (1)

    Shiny Mechanics:
    - 5% chance per enemy encounter to spawn shiny
    - Shiny items have same stats but visual distinction
    - Shiny status persists through crafting (child is shiny if either parent is shiny)

dependencies:
  libraries: "None specific (SwiftUI for UI)"
  services: "Backend inventory service, equipment management API"
  data_sources: "PostgreSQL items table, Supabase for user ownership"

implementation_status:
  notes:
    - "Light MVP: Hardcoded mock items, basic equip/unequip, local stat calculation"
    - "Full MVP: Backend inventory API, database persistence, shiny variants, equipment slots"
    - "Finished: Item sorting/filtering, visual polish, stats balancing, premium items"

user_stories:
  - US-301
  - US-302
