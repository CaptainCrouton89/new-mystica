title: Technical Specification - User Authentication
template: ~/.claude/file-templates/init-project/feature-spec/feature-title.yaml
feature_id: F-07
status: in-progress
last_updated: 2025-10-21

summary: "Device-based anonymous authentication for MVP0 zero-friction onboarding. Uses iOS device UUID auto-registration with long-lived JWT tokens (30 days). Email linking deferred to post-MVP0 for multi-device support."

functional_overview:
  core_logic: "Device UUID (iOS identifierForVendor) auto-registers anonymous accounts on first launch. Backend issues 30-day JWT tokens (no refresh needed). Client stores tokens in Keychain. Device loss = account loss (acceptable MVP0 limitation). All API requests include Authorization header with JWT token."
  data_schema: "Supabase auth.users table (managed by Supabase), custom users table for game profile"
  api_endpoints:
    - "POST /api/v1/auth/register-device (device UUID → JWT tokens)"
    - "GET /api/v1/auth/me (verify token, get user profile)"
    - "POST /api/v1/auth/logout (revoke tokens, cleanup)"
  integration_points:
    - "Supabase Auth service"
    - "All backend APIs require auth"

detailed_design:
  data_structures:
    - name: "users (custom game profile)"
      columns:
        - "id: UUID (PK, backend-generated)"
        - "device_id: VARCHAR (iOS identifierForVendor UUID)"
        - "account_type: ENUM ('anonymous', 'email') - default 'anonymous'"
        - "email: VARCHAR (nullable, for future email linking)"
        - "username: VARCHAR (optional, unique)"
        - "level: INT (default 1)"
        - "total_atk: INT (from equipped items)"
        - "total_def: INT"
        - "total_hp: INT"
        - "created_at: TIMESTAMP"
        - "last_login: TIMESTAMP"

  apis:
    - method: "POST"
      endpoint: "/api/v1/auth/register-device"
      request: "{device_id: 'UUID'}"
      response: "{user: {id, device_id, account_type: 'anonymous'}, session: {access_token, expires_in: 2592000}}"
      errors:
        - "400: Invalid device_id format (must be valid UUID)"
        - "409: Device already registered (returns existing session)"

    - method: "GET"
      endpoint: "/api/v1/auth/me"
      request: "Header: Authorization Bearer {access_token}"
      response: "{id, device_id, account_type, username, vanity_level, total_stats, created_at}"
      errors:
        - "401: Unauthorized (invalid or expired token)"

    - method: "POST"
      endpoint: "/api/v1/auth/logout"
      request: "Header: Authorization Bearer {access_token}"
      response: "{success: true}"
      errors: []

  diagrams: |
    Device Registration Flow (First Launch):
    1. App launch → Generate/read iOS identifierForVendor UUID
    2. Client: POST /api/v1/auth/register-device {device_id: UUID}
    3. Backend: Create anonymous user record, generate 30-day JWT
    4. Backend: Return {user, session} with long-lived access_token
    5. Client: Store access_token in Keychain
    6. Client: Initialize user profile via POST /profile/init
    7. Client: Navigate to map (instant play)

    Subsequent App Launches:
    1. App launch → Check Keychain for access_token
    2. Client: GET /api/v1/auth/me with stored token
    3. On success: Load user data, navigate to map
    4. On 401: Token expired, clear Keychain, re-register device

    Session Management:
    - Access token expires after 30 days (no refresh needed)
    - On token expiry: Re-register device (seamless to user)
    - Device loss = account loss (acceptable MVP0 limitation)
    - Email linking (future): Convert anonymous → email account

dependencies:
  libraries: "Keychain for secure token storage, CoreFoundation for device UUID"
  services: "Backend device registration API, profile initialization API"
  data_sources: "Custom users table with device_id field, no Supabase auth.users"

implementation_status:
  progress: 10  # Device auth being implemented by backend-developer agent
  completed_components:
    - "JWT authentication middleware (middleware/auth.ts) - reusable for device auth"
    - "User profile infrastructure (users table, profile endpoints)"
    - "Token validation and expiration handling"
    - "Frontend requirements analysis and strategy pivot documentation"
  in_progress_components:
    - "Device registration endpoint (POST /auth/register-device) - backend-developer agent_621481"
    - "Device UUID validation and anonymous user creation"
    - "30-day JWT token generation without refresh requirement"
  blocked_items:
    - "Frontend implementation - waiting for backend device auth completion"
  notes:
    - "MVP0 strategy change: Zero-friction device-based authentication instead of email/password"
    - "Device auth rationale: Instant play without registration barriers, critical for MVP0 user acquisition"
    - "Backend: Email auth endpoints exist but unused for MVP0 (keep for future email linking)"
    - "Device limitations: Lose device = lose progress, acceptable tradeoff for MVP0 simplicity"
    - "Security: Device UUID stored securely, 30-day JWT tokens reduce refresh complexity"
    - "Database: users table extended with device_id and account_type fields"
    - "Frontend scope simplified: 4 new files (AuthService, HTTPService, KeychainService, User model), 3 modified files (NavigationDestination, ContentView, SplashScreenView)"
    - "No login/register/verification screens needed - automatic device registration on first launch"
    - "Session management: Single 30-day token in Keychain, re-register on expiry"
    - "Post-MVP0 planned: Email linking for multi-device support, account migration, cloud save"
    - "Out of scope for MVP0: Email auth UI, password reset, OAuth providers, account recovery"

user_stories:
  - US-601
  - US-602
