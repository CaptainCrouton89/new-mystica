title: Technical Specification - Material Drop System
template: ~/.claude/file-templates/init-project/feature-spec/feature-title.yaml
feature_id: F-05
status: planned
last_updated: 2025-10-20

summary: "Enemies drop gold (100% chance) and materials (60% chance). Material drops inherit style from enemy type. Gold amounts and material pools scale with enemy level. Enemy level equals player's average equipped item level."

functional_overview:
  core_logic: "On combat victory, roll for material drop (60% chance). If success, select random material from enemy's drop pool and inherit style from enemy type. Always award gold (random amount in enemy's level-scaled range). Add materials to player_materials inventory and gold to player balance."
  data_schema: "enemies table with material_drop_pool JSON, combat_sessions with rewards, player_materials incremented"
  api_endpoints:
    - "POST /combat/complete (returns rewards)"
  integration_points:
    - "Combat system (F-02) triggers on victory"
    - "Materials system (F-04) receives dropped materials"
    - "Base items (F-03) determine enemy level"
    - "Pool System: LootPools determine available materials based on location attributes and combat level"

detailed_design:
  data_structures:
    - name: "enemies (templates per location)"
      columns:
        - "id: UUID (PK)"
        - "location_id: UUID (FK to locations)"
        - "base_level: INT (dynamically set to player avg item level)"
        - "material_drop_pool: JSON ARRAY ['iron', 'flame', 'wood', 'stone'] (possible materials)"
        - "gold_min: INT (100 × level)"
        - "gold_max: INT (200 × level)"
        - "material_drop_rate: DECIMAL (0.6 = 60%)"
        - "style_id: STRING (FK to StyleDefinitions, determines material style)"

    - name: "combat_rewards (returned from API, not stored)"
      columns:
        - "gold_amount: INT"
        - "material_dropped: {material_id, style_id} (null if no drop)"

  apis:
    - method: "POST"
      endpoint: "/combat/complete"
      request: "{session_id: UUID, result: 'victory' | 'defeat'}"
      response: |
        {
          result: 'victory',
          rewards: {
            gold: 350,
            material: {
              material_id: 'flame',
              name: 'Flame',
              style_id: 'normal'
            } // null if no drop
          },
          updated_balance: {
            gold: 1850,
            materials: [{material_id: 'flame', style_id: 'normal', quantity: 3}] // updated after adding drop
          }
        }
      errors:
        - "404: Combat session not found"
        - "400: Combat not complete (enemy still alive)"

  diagrams: |
    Drop Calculation Flow (Server-Side):
    1. Validate combat victory (enemy HP = 0)
    2. Get enemy level from combat session
    3. Roll for material drop: random(0, 1) < 0.6 ?
    4. If material drop success:
       a. Select random material from enemy.material_drop_pool
       b. Inherit style from enemy: material.style_id = enemy.style_id
       c. Create material reward: {material_id, style_id}
    5. Calculate gold drop: random(enemy.gold_min, enemy.gold_max)
    6. Update player inventory:
       - player.gold += gold_drop
       - player_materials: increment quantity (or create new row if not owned)
    7. Return rewards to client

    Enemy Level Scaling (on combat start):
    1. Get player's 6 equipped items
    2. Calculate average level: sum(item.level) / 6
    3. Set enemy level = floor(average_level)
       OR enemy level = floor(average_level) + 1 for slight challenge
    4. Scale enemy stats based on level
    5. Set gold_min = 100 × level, gold_max = 200 × level

    Material Drop Pool Assignment (per location, pre-set):
    - Urban locations: ['iron', 'steel', 'copper', 'bronze']
    - Nature locations: ['wood', 'stone', 'ice']
    - Fire locations: ['flame', 'ash', 'ember']
    - Coffee shops: ['coffee', 'matcha', 'mocha']
    - etc.

    Example Combat Victory:
    Player avg item level: 5
    Enemy level: 5
    Enemy drop pool: ['iron', 'flame', 'wood']
    Gold range: 500-1000

    Roll material drop: 0.57 < 0.6 → SUCCESS
    Select material: random choice → 'flame'
    Inherit style: enemy.style_id = 'volcanic' → material.style_id = 'volcanic'
    Gold amount: random(500, 1000) → 743

    Rewards: {gold: 743, material: {material_id: 'flame', style_id: 'volcanic'}}

dependencies:
  libraries: "None (server-side random number generation)"
  services: "Combat service, inventory service, RNG service"
  data_sources: "enemies table, player_materials table, player gold balance"

implementation_status:
  notes:
    - "Light MVP: Hardcoded enemy level = 3, fixed gold = 200, material drop = 100% for testing"
    - "Full MVP: Dynamic enemy scaling, 60% material drop rate, enemy style inheritance, level-scaled gold"
    - "Finished: Location-specific drop pools, rare material drops, daily bonus drops, streak bonuses"

balancing_parameters:
  material_drop_rate: "60% (ensures steady material income without flooding inventory)"
  style_inheritance: "Materials inherit enemy style_id (styled enemies drop styled materials, normal enemies drop normal materials)"
  gold_scaling: "100-200 × enemy_level (allows ~5 upgrades per combat at same level)"
  enemy_level_formula: "floor(avg_player_item_level) (enemies scale to player, always fair challenge)"

user_stories:
  - US-203 (updated: Complete Combat and Receive Drops)
  - US-305 (new: View Combat Rewards)
